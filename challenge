#!/usr/bin/env ruby

def prase_line(line)
  line.split(' ').map(&:to_i)
end

def find_target_cube(input)
  box_x, box_y, box_z, *cubes_amounts = input
  box_volume = box_x * box_y * box_z
  cubes = []
  min_box_size = [box_x, box_y, box_z].min

  cubes_amounts.each_with_index.reduce(cubes) do |memo, (amount, index)|
    axis_size = 2 ** index
    cubes_volume = (axis_size ** 3) * amount

    if axis_size <= min_box_size && cubes_volume == box_volume
      memo << { axis_size: axis_size, cubes_amount: amount, cubes_volume: cubes_volume }
    end

    memo
  end

  smallest_cube = cubes.min_by { |cube| cube[:cubes_amount] } || {}

  smallest_cube[:cubes_amount] || -1
end

ARGF.each do |line|
  input = prase_line(line)

  puts find_target_cube(input)
end

